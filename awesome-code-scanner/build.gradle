apply plugin: 'com.android.library'

version = "1.1"

buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.4'
    }
}


android {
//    minSdkVersion = 14
//    targetSdkVersion = 29
//    compileSdkVersion = 29
//    versionCode = 2
//    versionName = '1.1'

    namespace 'com.gpfreetech.awesomescanne'
    compileSdkVersion 34
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 2
        versionName '1.1'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    api 'com.google.zxing:core:3.3.3'
    api 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
}

ext {
    bintrayRepo = 'AwesomeCodeScanner'
    bintrayName = 'AwesomeCodeScanner'

    publishedGroupId = 'com.gpfreetech'
    libraryName = 'AwesomeCodeScanner'
    artifact = 'AwesomeCodeScanner'

    libraryDescription = '\n' +
            'Awesome Code scanner library for Android, This is multi code scanner module. You can scan QR, Barcode etc in your app using this library. This library is based on ZXing'

    siteUrl = 'https://github.com/GovindaPaliwal/AwesomeCodeScanner'
    gitUrl = 'https://github.com/GovindaPaliwal/AwesomeCodeScanner.git'
    githubRepository= 'https://github.com/GovindaPaliwal/'

    libraryVersion = version

    developerId = 'gpfreetech'
    developerName = 'Govinda P'
    developerEmail = 'gpfreetech@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId
version = libraryVersion
//
//install {
//    repositories.mavenInstaller {
//        pom.project {
//            packaging 'aar'
//            groupId publishedGroupId
//            artifactId artifact
//
//            name libraryName
//            description libraryDescription
//            url siteUrl
//
//            licenses {
//                license {
//                    name licenseName
//                    url licenseUrl
//                }
//            }
//            developers {
//                developer {
//                    id developerId
//                    name developerName
//                    email developerEmail
//                }
//            }
//            scm {
//                connection gitUrl
//                developerConnection gitUrl
//                url siteUrl
//            }
//        }
//    }
//}

task sourcesJar(type: Jar) {
//    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ['archives']
//    pkg {
//        repo = bintrayRepo
//        name = bintrayName
//        desc = libraryDescription
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = allLicenses
//        dryRun = false
//        publish = true
//        override = false
//        publicDownloadNumbers = true
//        version {
//            desc = libraryDescription
//        }
//    }
//}